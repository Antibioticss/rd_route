class String
	def red;   "\033[1;31m#{self}\033[0m" end
	def green; "\033[1;32m#{self}\033[0m" end
	def brown;  "\033[33m#{self}\033[0m" end
	def nya;  "\033[35m#{self}\033[0m" end
end

task :default => [:build, :tests]

desc "Build tests for 'rd_route' with clang(32|64) and gcc(32|64)"
task :build do
	# You can build with -DDEBUG to see tests' output
	checker = 0
	system("mkdir build") if (!File.exists?(Dir.getwd+"/build"))
	puts "Compile: clang (i386)".nya
	system("clang -arch i386 -framework CoreFoundation -o build/clang_i386 test_route.c ../rd_route.c")
	checker += 1 if $?.exitstatus != 0
	puts "Compile: clang (x86_64)".nya
	system("clang -arch x86_64  -framework CoreFoundation -o build/clang_x86_64 test_route.c ../rd_route.c")
	checker += 1 if $?.exitstatus != 0
	puts "Compile: gcc (i386)".nya
	system("gcc -arch i386  -framework CoreFoundation -std=c99 -o build/gcc_i386 test_route.c ../rd_route.c")
	checker += 1 if $?.exitstatus != 0
	puts "Compile: gcc (x86_64)".nya
	system("gcc -arch x86_64 -framework CoreFoundation -std=c99 -o build/gcc_x86_64 test_route.c ../rd_route.c")
	checker += 1 if $?.exitstatus != 0

	system("clear") if checker == 0
end

task :tests do
	checker = 0
	arches = ["clang_i386", "clang_x86_64", "gcc_i386", "gcc_x86_64"]
	arches.map { |a|
		system("./build/#{a}")
		checker += 1 if $?.exitstatus != 0
		if ($?.exitstatus != 0) then
			puts "Test #{a}: ".brown + "FAIL".red
		else
			puts "Test #{a}: ".brown + "OK".green
		end
	}

	system("rm -Rf ./build")

	if (0 == checker) then
		puts "Alright!".green
		exit 0
	else
		puts "Not all tests passed".red
		exit (-1)
	end
end
